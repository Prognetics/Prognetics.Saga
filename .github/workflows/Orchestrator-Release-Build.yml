name: Orchestrator Release Build

on:
  release:
      #types: [published]
      types: [created]
      
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal
      - name: Pack Orchestrator
        run: dotnet pack ${GITHUB_WORKSPACE}/Orchestrator/Prognetics.Saga.Orchestrator/Prognetics.Saga.Orchestrator.csproj -p:PackageVersion=${{ github.ref_name }}
      - name: Publish to nuget.org
        run: dotnet nuget push ${GITHUB_WORKSPACE}/Orchestrator/Prognetics.Saga.Orchestrator/bin/Debug/*.nupkg -k ${{ secrets.NUGETAPIKEY }} -s https://api.nuget.org/v3/index.json
      
#       - name: Setup NuGet.exe for use with actions
#         # You may pin to the exact commit or the version.
#         # uses: NuGet/setup-nuget@fd9fffd6ca4541cf4152a9565835ca1a88a6eb37
#         uses: NuGet/setup-nuget@v1.1.1
#         with:
#     # NuGet version to install. Can be `latest`, `preview`, a concrete version like `5.3.1`, or a semver range specifier like `5.x`.
#           nuget-version: 'latest'
#     # NuGet API Key to configure.
#           nuget-api-key: ${{ secrets.NUGETAPIKEY }}
#     # Source to scope the NuGet API Key to.
#     #      nuget-api-key-source: # optional
#       - name: Publish package
#         run: echo 'hello world!'
        
